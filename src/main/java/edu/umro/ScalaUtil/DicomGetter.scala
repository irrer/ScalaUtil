package edu.umro.ScalaUtil

import java.io.File
import com.pixelmed.dicom.AttributeList
import com.pixelmed.dicom.Attribute
import com.pixelmed.dicom.TagFromName
import com.pixelmed.network.ReceivedObjectHandler
import com.pixelmed.dicom.DicomDictionary
import com.pixelmed.dicom.StoredFilePathStrategy
import com.pixelmed.dicom.StoredFilePathStrategySingleFolder
import com.pixelmed.network.StorageSOPClassSCPDispatcher
import com.pixelmed.network.Association
import com.pixelmed.network.AssociationFactory
import com.pixelmed.network.Association
import java.util.LinkedList
import com.pixelmed.network.PresentationContext
import com.pixelmed.dicom.TransferSyntax
import com.pixelmed.dicom.SOPClass
import com.pixelmed.network.CMoveRequestCommandMessage
import com.pixelmed.network.CompositeResponseHandler
import java.io.ByteArrayOutputStream
import com.pixelmed.dicom.DicomOutputStream
import com.pixelmed.network.AReleaseException
import edu.umro.util.Utility
import java.util.Date
import java.text.SimpleDateFormat
import com.pixelmed.dicom.AttributeTag
import com.pixelmed.dicom.AttributeFactory
import com.pixelmed.dicom.StoredFilePathStrategy
import com.pixelmed.network.MoveSOPClassSCU
import com.pixelmed.network.DicomNetworkException
import java.util.HashSet

object DicomGetter extends Logging {

  var count = 0

  class DefaultReceivedObjectHandler extends ReceivedObjectHandler {
    override def sendReceivedObjectIndication(fileName: String, transferSyntax: String, callingAETitle: String): Unit = {
      logger.info("Received DICOM from " + callingAETitle + " file " + " DICOM file " + fileName)
      count = count + 1
    }
  }

  def addAttr(tag: AttributeTag, value: String, identifier: AttributeList): AttributeList = {
    val a = AttributeFactory.newAttribute(tag)
    a.addValue(value)
    identifier.put(a)
    identifier
  }

  def buildIdentifier: AttributeList = {
    addAttr(TagFromName.QueryRetrieveLevel, "SERIES", new AttributeList)
  }

  def main(args: Array[String]): Unit = {

    //val mainDirName = """D:\tmp\aqa\tmp\May9_TX4"""
    val mainDirName = """D:\tmp\aqa\tmp\Jul_21"""

    val mainDir = new File(mainDirName)
    println("Putting files in: " + mainDir.getAbsolutePath)
    mainDir.mkdirs

    val cpXstorPacs = new PACS("CP_XSTOR_IRRER", "141.214.125.209", 15656)
    val irrerPacs = new PACS("IRRER", "141.214.125.209", 15678)
    val umroarchivePacs = new PACS("UMRO_ARCHIVE", "10.30.3.69", 104)
    val evalPacs = new PACS("EVAL1109", "141.214.124.189", 104)
    val wlqaTestPacs = new PACS("WLQA_TEST", "141.214.125.209", 5682)
    val clinPacs = new PACS("VMSDBD", "10.30.65.100", 105)

    val thisPacs = wlqaTestPacs
    val thatPacs = clinPacs

    println("localPacs: " + thisPacs)
    println("remotePacs: " + thatPacs)

    val dicomReceiver = new DicomReceiver(mainDir, thisPacs)

    val seriesUidSeqMay9_TX4 = Seq(
      "1.2.246.352.61.2.4736248975032438764.17557397290654793385",
      "1.2.246.352.61.2.5078458363670471109.14810913391405883560",
      "1.2.246.352.61.2.5187461766680823991.2305822249509511303",
      "1.2.246.352.61.2.5115451825195345706.6473994088005628320",
      "1.2.246.352.61.2.5597865179667758918.18425015796824976538",
      "1.2.246.352.61.2.4697786685783655844.1333282640741256100",
      "1.2.246.352.61.2.4738999668362136179.13733235375557839014",
      "1.2.246.352.61.2.4814420317040462539.523298602166789296",
      "1.2.246.352.61.2.4956718520717464437.30611999831760799",
      "1.2.246.352.61.2.5724240852016814383.6403631505273016242",
      "1.2.246.352.61.2.5271855262280508831.2640337907587524485",
      "1.2.246.352.61.2.4805172899480834193.10714707650614063019",
      "1.2.246.352.61.2.4620585291973694107.1871814452784398473",
      "1.2.246.352.61.2.5477890739831696856.15652681217784119958",
      "1.2.246.352.61.2.5369795858714785455.9036689262869321363",
      "1.2.246.352.61.2.5497265680927278532.6465820194084090002",
      "1.2.246.352.61.2.5662283103307752471.1776960486550622894",
      "1.2.246.352.61.2.4717213074312035212.8118886171604444093",
      "1.2.246.352.61.2.5442016808655132257.9599157445072631443",
      "1.2.246.352.61.2.5294417042160336291.17191635105385792694",
      "1.2.246.352.61.2.5362482301937414827.17935519708339404685",
      "1.2.246.352.61.2.5555148993943369796.11639039617076347045",
      "1.2.246.352.61.2.5709758603574596911.11773304505112628904",
      "1.2.246.352.61.2.5335637450956978670.6078697464922007692",
      "1.2.246.352.71.2.824327626427.4630938.20190821162314")

      val seriesUidSeqPR = Seq(
         "1.2.246.352.61.2.5178694219898672721.389378833256730018",
"1.2.246.352.61.2.5161223215598234460.14557423482060322691",
"1.2.246.352.61.2.4653487441837705367.7941613449241115832",
"1.2.246.352.61.2.5306251543407980150.16776754834691654532",
"1.2.246.352.61.2.5225822004263547719.801547019551562382",
"1.2.246.352.61.2.4948001943159681635.4023803078726985918",
"1.2.246.352.61.2.5439582124918186049.14459379367775809427",
                   "1.2.246.352.61.2.5288679518931713833.2980130239326461596",
"1.2.246.352.61.2.5617732172644135967.2397603148742365589",
"1.2.246.352.61.2.4939014221484870786.16715912921333004964",
"1.2.246.352.61.2.5754768356153461458.9826898794328188861",
"1.2.246.352.61.2.5139853001949774239.3566939144251984560",
"1.2.246.352.61.2.5199332294280250251.8283688663824585656",
"1.2.246.352.61.2.4947112726672536998.2327180857946594188",
"1.2.246.352.61.2.5136191120555480928.287821785834275727",
"1.2.246.352.61.2.5741855221842333841.17012404323283973308",
"1.2.246.352.61.2.5516466383715642168.4910801812511935926",
"1.2.246.352.61.2.4626029298599537411.8225813755205460615",
"1.2.246.352.61.2.5740470007493782784.11961110870271311780",
 )
 
 val seriesTX2_RTIMAGE = Seq("1.2.246.352.61.2.5114746999821828655.11474646231719155335")
 
 
 val seriesUidSeq = Seq     (
     "1.2.246.352.61.2.5181765138530440586.10271888173485686166",
"1.2.246.352.61.2.4943033272339337398.1659082882001272238",
"1.2.246.352.61.2.5178694219898672721.389378833256730018",
"1.2.246.352.61.2.5124533148547240400.10197946192284687263",
"1.2.246.352.61.2.5161223215598234460.14557423482060322691",
"1.2.246.352.61.2.4653487441837705367.7941613449241115832",
"1.2.246.352.61.2.4643347551104958424.1353062599432636582",
"1.2.246.352.61.2.4660210429243865950.5546376927965327499",
"1.2.246.352.61.2.5306251543407980150.16776754834691654532",
"1.2.246.352.61.2.5718891796375417464.10803163514933895849",
"1.2.246.352.61.2.4815850732453090434.1637164180659084721",
"1.2.246.352.61.2.5225822004263547719.801547019551562382",
"1.2.246.352.61.2.5279347360091531969.7115491817367959686",
"1.2.246.352.61.2.5423053162407673463.8991095648278085042",
"1.2.246.352.61.2.4948001943159681635.4023803078726985918",
"1.2.246.352.61.2.4804194240519300604.5443671400093588644",
"1.2.246.352.61.2.5153877822380056108.11060432208422936737",
"1.2.246.352.61.2.5439582124918186049.14459379367775809427",
"1.2.246.352.61.2.4738933490198914683.16090414578903492742",
"1.2.246.352.61.2.5285450244887598440.4929096113508608146",
"1.2.246.352.61.2.5288679518931713833.2980130239326461596",
"1.2.246.352.61.2.5695246932955620854.17093508572032096654",
"1.2.246.352.61.2.5548319543812070486.17930946680038037",
"1.2.246.352.61.2.5617732172644135967.2397603148742365589",
"1.2.246.352.61.2.4939014221484870786.16715912921333004964",
"1.2.246.352.61.2.4659217659452840164.5470617049065146761",
"1.2.246.352.61.2.4934336992954711563.16459648056479586187",
"1.2.246.352.61.2.5754768356153461458.9826898794328188861",
"1.2.246.352.61.2.5280563105413626303.8147310505106412469",
"1.2.246.352.61.2.4700961591250910357.330032137145478568",
"1.2.246.352.61.2.5139853001949774239.3566939144251984560",
"1.2.246.352.61.2.4748185842420872784.10514091660948107671",
"1.2.246.352.61.2.4894820063754357853.7410460124305055924",
"1.2.246.352.61.2.5199332294280250251.8283688663824585656",
"1.2.246.352.61.2.4920072452277515943.17244999499184268969",
"1.2.246.352.61.2.5295357638985188765.4724565239696584077",
"1.2.246.352.61.2.4947112726672536998.2327180857946594188",
"1.2.246.352.61.2.5399513231542576158.5062649622043911601",
"1.2.246.352.61.2.4972401350913605980.4430319199198500242",
"1.2.246.352.61.2.5136191120555480928.287821785834275727",
"1.2.246.352.61.2.5327484160266940643.628455366224823942",
"1.2.246.352.61.2.5429898664930483009.5958727785053694095",
"1.2.246.352.61.2.5741855221842333841.17012404323283973308",
"1.2.246.352.61.2.4809413971897806149.12538565008687370930",
"1.2.246.352.61.2.4890272387710722000.5126668256211034813",
"1.2.246.352.61.2.5516466383715642168.4910801812511935926",
"1.2.246.352.61.2.5254158840110933953.2113383503016561033",
"1.2.246.352.61.2.4997231834254396903.629273788686938778",
"1.2.246.352.61.2.4626029298599537411.8225813755205460615",
"1.2.246.352.61.2.5740470007493782784.11961110870271311780",
"1.2.246.352.61.2.4977925924602888284.12852090326955177375",
"1.2.246.352.61.2.5128047862095082249.17192107392648001977"
)

    val sopRtplanList = Seq(
"1.2.246.352.71.5.427549902257.668332.20190825122736",
"1.2.246.352.71.5.427549902257.685632.20191030112620",
"1.2.246.352.71.5.427549902257.690058.20191115101945",
"1.2.246.352.71.5.427549902257.690287.20191118080443",
"1.2.246.352.71.5.427549902257.692177.20191124141309",
"1.2.246.352.71.5.427549902257.701887.20200109211813",
"1.2.246.352.71.5.427549902257.703997.20200120160052",
"1.2.246.352.71.5.427549902257.704527.20200122124151",
"1.2.246.352.71.5.427549902257.704528.20200122131740",
"1.2.246.352.71.5.427549902257.704529.20200122134426",
"1.2.246.352.71.5.427549902257.704530.20200122135330",
"1.2.246.352.71.5.427549902257.710157.20200213091126",
"1.2.246.352.71.5.427549902257.712623.20200224111632",
"1.2.246.352.71.5.427549902257.719832.20200327062540",
"1.2.246.352.71.5.427549902257.728422.20200506103412",
"1.2.246.352.71.5.427549902257.733182.20200529113045",
"1.2.246.352.71.5.427549902257.733412.20200529211323",
"1.2.246.352.71.5.427549902257.733413.20200529214302",
"1.2.246.352.71.5.427549902257.733414.20200529220856",
"1.2.246.352.71.5.427549902257.733415.20200529222638",
"1.2.246.352.71.5.427549902257.733416.20200529224347",
"1.2.246.352.71.5.427549902257.734832.20200604164524",
"1.2.246.352.71.5.427549902257.739792.20200629093357",
"1.2.246.352.71.5.427549902257.743777.20200720081400",
"1.2.246.352.71.5.824327626427.666663.20190821154741",
"1.2.246.352.71.5.824327626427.666664.20190821161303",
"1.2.246.352.71.5.824327626427.666665.20190821163000",
"1.2.246.352.71.5.824327626427.666667.20190821171713",
"1.2.246.352.71.5.824327626427.666668.20190821173500",

)
     
val regSeriesList = Seq(    
"1.2.246.352.62.2.5385458967907575494.14970525155448755881",
"1.2.246.352.62.2.5093578298808109697.10484140957319377313",
"1.2.246.352.62.2.5588255649974877880.17185394798501075369",
"1.2.246.352.62.2.5035987562270830048.7663403885682032265",
"1.2.246.352.62.2.4848973319993640698.6372312420172789166",
"1.2.246.352.62.2.5405544414834140737.10435320682879197579",
"1.2.246.352.62.2.5349246692312153212.6937559147488128662",
"1.2.246.352.62.2.4648412184809110821.899346862499492009",
"1.2.246.352.62.2.5229480817028366757.4498713650385996467",
    )
    
    
    val July21 = Seq(
        "1.2.246.352.62.2.4876217766146919743.159007202772479673",
"1.2.246.352.62.2.5385458967907575494.14970525155448755881",
"1.2.246.352.62.2.5130440997397930287.17846795184274493335",
"1.2.246.352.62.2.5093578298808109697.10484140957319377313",
"1.2.246.352.62.2.5672876062310897656.766975969336826017",
"1.2.246.352.62.2.5588255649974877880.17185394798501075369",
"1.2.246.352.62.2.5612485553806952309.4424528925093566102",
"1.2.246.352.62.2.5623241090892547613.3078824027762914691",
"1.2.246.352.62.2.5331381008654776753.8958121464933135537",
"1.2.246.352.62.2.5035987562270830048.7663403885682032265",
"1.2.246.352.62.2.5238697069669846627.5860194943353013928",
"1.2.246.352.62.2.5249249798598908278.18152603404250394544",
"1.2.246.352.62.2.5131358401985915084.4666402461219085746",
"1.2.246.352.62.2.4848973319993640698.6372312420172789166",
"1.2.246.352.62.2.5210756594751009603.11172870739032778909",
"1.2.246.352.62.2.5405544414834140737.10435320682879197579",
"1.2.246.352.62.2.5401383109444683335.14912119776149517712",
"1.2.246.352.62.2.5349246692312153212.6937559147488128662",
"1.2.246.352.62.2.4947098184234532387.7309228569600825767",
"1.2.246.352.62.2.4648412184809110821.899346862499492009",
"1.2.246.352.62.2.5201889237131290016.3251696867169258645",
"1.2.246.352.62.2.5229480817028366757.4498713650385996467"

    )
          
    /**
     * Get DICOM by SeriesInstanceUID.
     */
    def getSeries(seriesUid: String) = {
      dicomReceiver.setSubDir(seriesUid)
      val id = buildIdentifier
      val id2 = addAttr(TagFromName.SeriesInstanceUID, seriesUid, id)
      val subDir = new File(mainDir, seriesUid)
      if (subDir.exists) edu.umro.util.Utility.deleteFileTree(subDir)

      dicomReceiver.setSubDir(subDir)
      println("Putting files into " + dicomReceiver.getSubDir.getAbsolutePath)
      val start = System.currentTimeMillis
      val success = dicomReceiver.cmove(id, thatPacs, thisPacs, SOPClass.PatientRootQueryRetrieveInformationModelMove)
      val elapsed = System.currentTimeMillis - start
      val status = if (success.isDefined) ("Failed: " + success.get) else "Success"
      println("elapsed ms: " + elapsed + "    Status: " + status)
    }
          
    /**
     * Get DICOM by SOPInstanceUID.
     */
    def getInstance(sopUid: String) = {
      dicomReceiver.setSubDir(sopUid)
      val id = buildIdentifier
      val id2 = addAttr(TagFromName.SOPInstanceUID, sopUid, id)
      val subDir = new File(mainDir, sopUid)
      if (subDir.exists) edu.umro.util.Utility.deleteFileTree(subDir)

      dicomReceiver.setSubDir(subDir)
      println("Putting files into " + dicomReceiver.getSubDir.getAbsolutePath)
      val start = System.currentTimeMillis
      val success = dicomReceiver.cmove(id, thatPacs, thisPacs, SOPClass.PatientRootQueryRetrieveInformationModelMove)
      val elapsed = System.currentTimeMillis - start
      val status = if (success.isDefined) ("Failed: " + success.get) else "Success"
      println("elapsed ms: " + elapsed + "    Status: " + status)
    }

    val start = System.currentTimeMillis
    //seriesUidSeq.map(getSeries)
    //sopRtplanList.map(getInstance)
    //seriesTX2_RTIMAGE.map(getSeries)
    //regSeriesList.map(getSeries)
    July21.map(getSeries)

    println("Done.  Elapsed ms: " + (System.currentTimeMillis - start))
    System.exit(0)
  }

}
